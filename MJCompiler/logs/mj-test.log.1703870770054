INFO  18:24:10,417 - Compiling source file: C:\Users\Lenovo\OneDrive\Desktop\PP1\workspace\MJCompiler\test\test.mj
INFO  18:24:10,422 - #2 program
INFO  18:24:10,422 - #32 p
INFO  18:24:10,422 - #33 namespace
INFO  18:24:10,422 - #32 sizes
INFO  18:24:10,422 - #3 {
INFO  18:24:10,422 - #7 const
INFO  18:24:10,422 - #32 int
INFO  18:24:10,422 - #32 tableSize
INFO  18:24:10,422 - #9 =
INFO  18:24:10,423 - #34 10
INFO  18:24:10,423 - #8 ;
INFO  18:24:10,423 - #3 {
INFO  18:24:10,423 - #4 }
INFO  18:24:10,423 - #4 }
INFO  18:24:10,423 - #32 class
INFO  18:24:10,423 - #32 Table
INFO  18:24:10,423 - #3 {
INFO  18:24:10,423 - #32 int
INFO  18:24:10,423 - #32 pos
INFO  18:24:10,423 - #10 [
INFO  18:24:10,423 - #11 ]
INFO  18:24:10,426 - #12 ,
INFO  18:24:10,426 - #32 neg
INFO  18:24:10,426 - #10 [
INFO  18:24:10,426 - #11 ]
INFO  18:24:10,426 - #12 ,
INFO  18:24:10,426 - #32 factor
INFO  18:24:10,426 - #8 ;
INFO  18:24:10,426 - #31 static
INFO  18:24:10,426 - #32 int
INFO  18:24:10,426 - #32 id
INFO  18:24:10,426 - #8 ;
INFO  18:24:10,426 - #31 static
INFO  18:24:10,426 - #3 {
INFO  18:24:10,426 - #32 id
INFO  18:24:10,426 - #9 =
INFO  18:24:10,426 - #34 0
INFO  18:24:10,426 - #8 ;
INFO  18:24:10,427 - #4 }
INFO  18:24:10,427 - #3 {
INFO  18:24:10,427 - #17 void
INFO  18:24:10,427 - #32 setfactor
INFO  18:24:10,427 - #15 (
INFO  18:24:10,427 - #32 int
INFO  18:24:10,427 - #32 factor
INFO  18:24:10,427 - #16 )
INFO  18:24:10,427 - #3 {
INFO  18:24:10,427 - #32 this
INFO  18:24:10,427 - #18 .
INFO  18:24:10,427 - #32 factor
INFO  18:24:10,427 - #9 =
INFO  18:24:10,427 - #32 factor
INFO  18:24:10,427 - #8 ;
INFO  18:24:10,427 - #4 }
INFO  18:24:10,427 - #17 void
INFO  18:24:10,427 - #32 putp
INFO  18:24:10,427 - #15 (
INFO  18:24:10,427 - #32 int
INFO  18:24:10,428 - #32 a
INFO  18:24:10,428 - #12 ,
INFO  18:24:10,428 - #32 int
INFO  18:24:10,428 - #32 idx
INFO  18:24:10,428 - #16 )
INFO  18:24:10,428 - #3 {
INFO  18:24:10,428 - #32 this
INFO  18:24:10,428 - #18 .
INFO  18:24:10,428 - #32 pos
INFO  18:24:10,428 - #10 [
INFO  18:24:10,428 - #32 idx
INFO  18:24:10,428 - #11 ]
INFO  18:24:10,428 - #9 =
INFO  18:24:10,428 - #32 a
INFO  18:24:10,428 - #8 ;
INFO  18:24:10,428 - #4 }
INFO  18:24:10,428 - #17 void
INFO  18:24:10,428 - #32 putn
INFO  18:24:10,428 - #15 (
INFO  18:24:10,428 - #32 int
INFO  18:24:10,428 - #32 a
INFO  18:24:10,428 - #12 ,
INFO  18:24:10,429 - #32 int
INFO  18:24:10,429 - #32 idx
INFO  18:24:10,429 - #16 )
INFO  18:24:10,429 - #3 {
INFO  18:24:10,429 - #32 this
INFO  18:24:10,429 - #18 .
INFO  18:24:10,429 - #32 neg
INFO  18:24:10,429 - #10 [
INFO  18:24:10,429 - #32 idx
INFO  18:24:10,429 - #11 ]
INFO  18:24:10,429 - #9 =
INFO  18:24:10,429 - #32 a
INFO  18:24:10,429 - #8 ;
INFO  18:24:10,429 - #4 }
INFO  18:24:10,429 - #32 int
INFO  18:24:10,429 - #32 getp
INFO  18:24:10,429 - #15 (
INFO  18:24:10,429 - #32 int
INFO  18:24:10,429 - #32 idx
INFO  18:24:10,429 - #16 )
INFO  18:24:10,429 - #3 {
INFO  18:24:10,429 - #24 return
INFO  18:24:10,429 - #32 pos
INFO  18:24:10,429 - #10 [
INFO  18:24:10,429 - #32 idx
INFO  18:24:10,430 - #11 ]
INFO  18:24:10,430 - #8 ;
INFO  18:24:10,430 - #4 }
INFO  18:24:10,430 - #32 int
INFO  18:24:10,430 - #32 getn
INFO  18:24:10,430 - #15 (
INFO  18:24:10,430 - #32 int
INFO  18:24:10,430 - #32 idx
INFO  18:24:10,430 - #16 )
INFO  18:24:10,430 - #3 {
INFO  18:24:10,430 - #24 return
INFO  18:24:10,430 - #32 neg
INFO  18:24:10,430 - #10 [
INFO  18:24:10,430 - #32 idx
INFO  18:24:10,430 - #11 ]
INFO  18:24:10,430 - #8 ;
INFO  18:24:10,430 - #4 }
INFO  18:24:10,430 - #4 }
INFO  18:24:10,430 - #4 }
INFO  18:24:10,430 - #32 Table
INFO  18:24:10,430 - #32 val
INFO  18:24:10,430 - #8 ;
INFO  18:24:10,430 - #32 int
INFO  18:24:10,430 - #32 rows
INFO  18:24:10,430 - #12 ,
INFO  18:24:10,430 - #32 columns
INFO  18:24:10,431 - #8 ;
INFO  18:24:10,431 - #3 {
INFO  18:24:10,431 - #17 void
INFO  18:24:10,431 - #32 f
INFO  18:24:10,431 - #15 (
INFO  18:24:10,431 - #32 char
INFO  18:24:10,431 - #32 ch
INFO  18:24:10,431 - #12 ,
INFO  18:24:10,431 - #32 int
INFO  18:24:10,431 - #32 a
INFO  18:24:10,431 - #12 ,
INFO  18:24:10,431 - #32 int
INFO  18:24:10,431 - #32 arg
INFO  18:24:10,431 - #16 )
INFO  18:24:10,431 - #32 int
INFO  18:24:10,431 - #32 x
INFO  18:24:10,431 - #8 ;
INFO  18:24:10,431 - #3 {
INFO  18:24:10,431 - #32 x
INFO  18:24:10,431 - #9 =
INFO  18:24:10,431 - #32 arg
INFO  18:24:10,431 - #8 ;
INFO  18:24:10,431 - #4 }
INFO  18:24:10,431 - #17 void
INFO  18:24:10,431 - #32 main
INFO  18:24:10,431 - #15 (
INFO  18:24:10,432 - #16 )
INFO  18:24:10,432 - #32 int
INFO  18:24:10,432 - #32 x
INFO  18:24:10,432 - #12 ,
INFO  18:24:10,432 - #32 i
INFO  18:24:10,432 - #8 ;
INFO  18:24:10,432 - #32 char
INFO  18:24:10,432 - #32 c
INFO  18:24:10,432 - #12 ,
INFO  18:24:10,432 - #32 int
INFO  18:24:10,432 - #10 [
INFO  18:24:10,432 - #11 ]
INFO  18:24:10,432 - #32 arr
INFO  18:24:10,432 - #8 ;
INFO  18:24:10,432 - #3 {
INFO  18:24:10,432 - #32 val
INFO  18:24:10,432 - #9 =
INFO  18:24:10,432 - #30 new
INFO  18:24:10,432 - #32 Table
INFO  18:24:10,432 - #15 (
INFO  18:24:10,432 - #16 )
INFO  18:24:10,432 - #8 ;
INFO  18:24:10,433 - #32 val
INFO  18:24:10,433 - #18 .
INFO  18:24:10,433 - #32 setfactor
INFO  18:24:10,433 - #15 (
INFO  18:24:10,433 - #34 2
INFO  18:24:10,433 - #16 )
INFO  18:24:10,433 - #8 ;
INFO  18:24:10,433 - #32 arr
INFO  18:24:10,433 - #9 =
INFO  18:24:10,433 - #30 new
INFO  18:24:10,433 - #32 int
INFO  18:24:10,433 - #10 [
INFO  18:24:10,433 - #34 3
INFO  18:24:10,433 - #11 ]
INFO  18:24:10,433 - #8 ;
INFO  18:24:10,433 - #27 for
INFO  18:24:10,433 - #15 (
INFO  18:24:10,433 - #32 i
INFO  18:24:10,433 - #9 =
INFO  18:24:10,433 - #34 0
INFO  18:24:10,433 - #8 ;
INFO  18:24:10,433 - #32 i
INFO  18:24:10,433 - #39 <
INFO  18:24:10,433 - #34 3
INFO  18:24:10,433 - #8 ;
INFO  18:24:10,434 - #32 i
INFO  18:24:10,434 - #28 ++
INFO  18:24:10,434 - #16 )
INFO  18:24:10,434 - #3 {
INFO  18:24:10,434 - #32 arr
INFO  18:24:10,434 - #10 [
INFO  18:24:10,434 - #32 i
INFO  18:24:10,434 - #11 ]
INFO  18:24:10,434 - #9 =
INFO  18:24:10,434 - #32 i
INFO  18:24:10,434 - #8 ;
INFO  18:24:10,434 - #4 }
INFO  18:24:10,434 - #27 for
INFO  18:24:10,434 - #15 (
INFO  18:24:10,434 - #32 i
INFO  18:24:10,434 - #9 =
INFO  18:24:10,434 - #34 0
INFO  18:24:10,434 - #8 ;
INFO  18:24:10,434 - #32 i
INFO  18:24:10,434 - #39 <
INFO  18:24:10,434 - #34 3
INFO  18:24:10,434 - #8 ;
INFO  18:24:10,434 - #32 i
INFO  18:24:10,434 - #28 ++
INFO  18:24:10,434 - #16 )
INFO  18:24:10,434 - #26 print
INFO  18:24:10,435 - #15 (
INFO  18:24:10,435 - #32 arr
INFO  18:24:10,435 - #10 [
INFO  18:24:10,435 - #32 i
INFO  18:24:10,435 - #11 ]
INFO  18:24:10,435 - #16 )
INFO  18:24:10,435 - #8 ;
INFO  18:24:10,435 - #32 val
INFO  18:24:10,435 - #18 .
INFO  18:24:10,435 - #32 pos
INFO  18:24:10,435 - #9 =
INFO  18:24:10,435 - #30 new
INFO  18:24:10,435 - #32 int
INFO  18:24:10,435 - #10 [
INFO  18:24:10,435 - #32 sizes
INFO  18:24:10,435 - #19 ::
INFO  18:24:10,435 - #32 tableSize
INFO  18:24:10,435 - #11 ]
INFO  18:24:10,435 - #8 ;
INFO  18:24:10,435 - #32 val
INFO  18:24:10,435 - #18 .
INFO  18:24:10,435 - #32 neg
INFO  18:24:10,435 - #9 =
INFO  18:24:10,435 - #30 new
INFO  18:24:10,435 - #32 int
INFO  18:24:10,435 - #10 [
INFO  18:24:10,435 - #32 sizes
INFO  18:24:10,435 - #19 ::
INFO  18:24:10,435 - #32 tableSize
INFO  18:24:10,435 - #11 ]
INFO  18:24:10,436 - #8 ;
INFO  18:24:10,436 - #25 read
INFO  18:24:10,436 - #15 (
INFO  18:24:10,436 - #32 x
INFO  18:24:10,436 - #16 )
INFO  18:24:10,436 - #8 ;
INFO  18:24:10,436 - #27 for
INFO  18:24:10,436 - #15 (
INFO  18:24:10,436 - #8 ;
INFO  18:24:10,436 - #32 i
INFO  18:24:10,436 - #39 <
INFO  18:24:10,436 - #32 sizes
INFO  18:24:10,436 - #19 ::
INFO  18:24:10,436 - #32 tableSize
INFO  18:24:10,436 - #8 ;
INFO  18:24:10,436 - #32 i
INFO  18:24:10,436 - #28 ++
INFO  18:24:10,436 - #16 )
INFO  18:24:10,436 - #3 {
INFO  18:24:10,436 - #32 val
INFO  18:24:10,436 - #18 .
INFO  18:24:10,436 - #32 putp
INFO  18:24:10,437 - #15 (
INFO  18:24:10,437 - #34 0
INFO  18:24:10,437 - #12 ,
INFO  18:24:10,437 - #32 i
INFO  18:24:10,437 - #16 )
INFO  18:24:10,437 - #8 ;
INFO  18:24:10,437 - #32 val
INFO  18:24:10,437 - #18 .
INFO  18:24:10,437 - #32 putn
INFO  18:24:10,437 - #15 (
INFO  18:24:10,437 - #34 0
INFO  18:24:10,437 - #12 ,
INFO  18:24:10,437 - #32 i
INFO  18:24:10,437 - #16 )
INFO  18:24:10,437 - #8 ;
INFO  18:24:10,437 - #4 }
INFO  18:24:10,437 - #32 f
INFO  18:24:10,437 - #15 (
INFO  18:24:10,438 - #32 c
INFO  18:24:10,438 - #12 ,
INFO  18:24:10,438 - #32 x
INFO  18:24:10,438 - #12 ,
INFO  18:24:10,438 - #32 i
INFO  18:24:10,438 - #16 )
INFO  18:24:10,438 - #8 ;
INFO  18:24:10,438 - #25 read
INFO  18:24:10,438 - #15 (
INFO  18:24:10,438 - #32 rows
INFO  18:24:10,438 - #16 )
INFO  18:24:10,438 - #8 ;
INFO  18:24:10,438 - #32 x
INFO  18:24:10,438 - #9 =
INFO  18:24:10,438 - #32 rows
INFO  18:24:10,438 - #8 ;
INFO  18:24:10,438 - #27 for
INFO  18:24:10,438 - #15 (
INFO  18:24:10,438 - #8 ;
INFO  18:24:10,438 - #8 ;
INFO  18:24:10,438 - #16 )
INFO  18:24:10,438 - #3 {
INFO  18:24:10,438 - #20 if
INFO  18:24:10,438 - #15 (
INFO  18:24:10,438 - #32 x
INFO  18:24:10,438 - #40 <=
INFO  18:24:10,438 - #34 0
INFO  18:24:10,439 - #16 )
INFO  18:24:10,439 - #22 break
INFO  18:24:10,439 - #8 ;
INFO  18:24:10,439 - #20 if
INFO  18:24:10,439 - #15 (
INFO  18:24:10,439 - #34 0
INFO  18:24:10,439 - #40 <=
INFO  18:24:10,439 - #32 x
INFO  18:24:10,439 - #14 &&
INFO  18:24:10,439 - #32 x
INFO  18:24:10,439 - #39 <
INFO  18:24:10,439 - #32 sizes
INFO  18:24:10,439 - #19 ::
INFO  18:24:10,439 - #32 tableSize
INFO  18:24:10,439 - #16 )
INFO  18:24:10,439 - #3 {
INFO  18:24:10,439 - #32 val
INFO  18:24:10,439 - #18 .
INFO  18:24:10,439 - #32 putp
INFO  18:24:10,439 - #15 (
INFO  18:24:10,439 - #32 val
INFO  18:24:10,439 - #18 .
INFO  18:24:10,439 - #32 getp
INFO  18:24:10,439 - #15 (
INFO  18:24:10,439 - #32 x
INFO  18:24:10,439 - #16 )
INFO  18:24:10,439 - #41 +
INFO  18:24:10,439 - #34 1
INFO  18:24:10,439 - #16 )
INFO  18:24:10,439 - #8 ;
INFO  18:24:10,439 - #4 }
INFO  18:24:10,439 - #21 else
INFO  18:24:10,439 - #20 if
INFO  18:24:10,439 - #15 (
INFO  18:24:10,440 - #42 -
INFO  18:24:10,440 - #32 sizes
INFO  18:24:10,440 - #19 ::
INFO  18:24:10,440 - #32 tableSize
INFO  18:24:10,440 - #39 <
INFO  18:24:10,440 - #32 x
INFO  18:24:10,440 - #14 &&
INFO  18:24:10,440 - #32 x
INFO  18:24:10,440 - #39 <
INFO  18:24:10,440 - #34 0
INFO  18:24:10,440 - #16 )
INFO  18:24:10,440 - #3 {
INFO  18:24:10,440 - #32 val
INFO  18:24:10,440 - #18 .
INFO  18:24:10,440 - #32 putn
INFO  18:24:10,440 - #15 (
INFO  18:24:10,440 - #32 val
INFO  18:24:10,440 - #18 .
INFO  18:24:10,440 - #32 getn
INFO  18:24:10,440 - #15 (
INFO  18:24:10,440 - #42 -
INFO  18:24:10,440 - #32 x
INFO  18:24:10,440 - #16 )
INFO  18:24:10,440 - #41 +
INFO  18:24:10,440 - #34 1
INFO  18:24:10,440 - #16 )
INFO  18:24:10,440 - #8 ;
INFO  18:24:10,440 - #4 }
INFO  18:24:10,440 - #25 read
INFO  18:24:10,440 - #15 (
INFO  18:24:10,441 - #32 x
INFO  18:24:10,441 - #16 )
INFO  18:24:10,441 - #8 ;
INFO  18:24:10,441 - #4 }
INFO  18:24:10,441 - #4 }
INFO  18:24:10,441 - #4 }
