INFO  18:22:32,442 - Compiling source file: C:\Users\Lenovo\OneDrive\Desktop\PP1\workspace\MJCompiler\test\test.mj
INFO  18:22:32,446 - #2 program
INFO  18:22:32,446 - #32 p
INFO  18:22:32,446 - #33 namespace
INFO  18:22:32,446 - #32 sizes
INFO  18:22:32,446 - #3 {
INFO  18:22:32,446 - #7 const
INFO  18:22:32,446 - #32 int
INFO  18:22:32,446 - #32 tableSize
INFO  18:22:32,446 - #9 =
INFO  18:22:32,446 - #34 10
INFO  18:22:32,447 - #8 ;
INFO  18:22:32,447 - #3 {
INFO  18:22:32,447 - #4 }
INFO  18:22:32,447 - #4 }
INFO  18:22:32,447 - #32 class
INFO  18:22:32,447 - #32 Table
INFO  18:22:32,447 - #3 {
INFO  18:22:32,447 - #32 int
INFO  18:22:32,447 - #32 pos
INFO  18:22:32,447 - #10 [
INFO  18:22:32,447 - #11 ]
INFO  18:22:32,447 - #12 ,
INFO  18:22:32,447 - #32 neg
INFO  18:22:32,447 - #10 [
INFO  18:22:32,447 - #11 ]
INFO  18:22:32,448 - #12 ,
INFO  18:22:32,448 - #32 factor
INFO  18:22:32,448 - #8 ;
INFO  18:22:32,448 - #31 static
INFO  18:22:32,448 - #32 int
INFO  18:22:32,448 - #32 id
INFO  18:22:32,448 - #8 ;
INFO  18:22:32,448 - #31 static
INFO  18:22:32,448 - #3 {
INFO  18:22:32,448 - #32 id
INFO  18:22:32,448 - #9 =
INFO  18:22:32,448 - #34 0
INFO  18:22:32,448 - #8 ;
INFO  18:22:32,448 - #4 }
INFO  18:22:32,448 - #3 {
INFO  18:22:32,448 - #17 void
INFO  18:22:32,448 - #32 setfactor
INFO  18:22:32,448 - #15 (
INFO  18:22:32,448 - #32 int
INFO  18:22:32,448 - #32 factor
INFO  18:22:32,448 - #16 )
INFO  18:22:32,449 - #3 {
INFO  18:22:32,449 - #32 this
INFO  18:22:32,449 - #18 .
INFO  18:22:32,449 - #32 factor
INFO  18:22:32,449 - #9 =
INFO  18:22:32,449 - #32 factor
INFO  18:22:32,449 - #8 ;
INFO  18:22:32,449 - #4 }
INFO  18:22:32,449 - #17 void
INFO  18:22:32,449 - #32 putp
INFO  18:22:32,449 - #15 (
INFO  18:22:32,449 - #32 int
INFO  18:22:32,449 - #32 a
INFO  18:22:32,449 - #12 ,
INFO  18:22:32,449 - #32 int
INFO  18:22:32,449 - #32 idx
INFO  18:22:32,449 - #16 )
INFO  18:22:32,449 - #3 {
INFO  18:22:32,449 - #32 this
INFO  18:22:32,449 - #18 .
INFO  18:22:32,449 - #32 pos
INFO  18:22:32,449 - #10 [
INFO  18:22:32,449 - #32 idx
INFO  18:22:32,449 - #11 ]
INFO  18:22:32,450 - #9 =
INFO  18:22:32,450 - #32 a
INFO  18:22:32,450 - #8 ;
INFO  18:22:32,450 - #4 }
INFO  18:22:32,450 - #17 void
INFO  18:22:32,450 - #32 putn
INFO  18:22:32,450 - #15 (
INFO  18:22:32,450 - #32 int
INFO  18:22:32,450 - #32 a
INFO  18:22:32,450 - #12 ,
INFO  18:22:32,450 - #32 int
INFO  18:22:32,450 - #32 idx
INFO  18:22:32,450 - #16 )
INFO  18:22:32,450 - #3 {
INFO  18:22:32,450 - #32 this
INFO  18:22:32,450 - #18 .
INFO  18:22:32,450 - #32 neg
INFO  18:22:32,450 - #10 [
INFO  18:22:32,450 - #32 idx
INFO  18:22:32,450 - #11 ]
INFO  18:22:32,450 - #9 =
INFO  18:22:32,450 - #32 a
INFO  18:22:32,450 - #8 ;
INFO  18:22:32,450 - #4 }
INFO  18:22:32,451 - #32 int
INFO  18:22:32,451 - #32 getp
INFO  18:22:32,451 - #15 (
INFO  18:22:32,451 - #32 int
INFO  18:22:32,451 - #32 idx
INFO  18:22:32,451 - #16 )
INFO  18:22:32,451 - #3 {
INFO  18:22:32,451 - #24 return
INFO  18:22:32,451 - #32 pos
INFO  18:22:32,451 - #10 [
INFO  18:22:32,451 - #32 idx
INFO  18:22:32,451 - #11 ]
INFO  18:22:32,451 - #8 ;
INFO  18:22:32,451 - #4 }
INFO  18:22:32,451 - #32 int
INFO  18:22:32,451 - #32 getn
INFO  18:22:32,451 - #15 (
INFO  18:22:32,451 - #32 int
INFO  18:22:32,451 - #32 idx
INFO  18:22:32,451 - #16 )
INFO  18:22:32,451 - #3 {
INFO  18:22:32,451 - #24 return
INFO  18:22:32,451 - #32 neg
INFO  18:22:32,451 - #10 [
INFO  18:22:32,451 - #32 idx
INFO  18:22:32,451 - #11 ]
INFO  18:22:32,452 - #8 ;
INFO  18:22:32,452 - #4 }
INFO  18:22:32,452 - #4 }
INFO  18:22:32,452 - #4 }
INFO  18:22:32,452 - #32 Table
INFO  18:22:32,452 - #32 val
INFO  18:22:32,452 - #8 ;
INFO  18:22:32,452 - #32 int
INFO  18:22:32,452 - #32 rows
INFO  18:22:32,452 - #12 ,
INFO  18:22:32,452 - #32 columns
INFO  18:22:32,452 - #8 ;
INFO  18:22:32,452 - #3 {
INFO  18:22:32,452 - #17 void
INFO  18:22:32,452 - #32 f
INFO  18:22:32,452 - #15 (
INFO  18:22:32,452 - #32 char
INFO  18:22:32,452 - #32 ch
INFO  18:22:32,452 - #12 ,
INFO  18:22:32,452 - #32 int
INFO  18:22:32,452 - #32 a
INFO  18:22:32,453 - #12 ,
INFO  18:22:32,453 - #32 int
INFO  18:22:32,453 - #32 arg
INFO  18:22:32,453 - #16 )
INFO  18:22:32,453 - #32 int
INFO  18:22:32,453 - #32 x
INFO  18:22:32,453 - #8 ;
INFO  18:22:32,453 - #3 {
INFO  18:22:32,453 - #32 x
INFO  18:22:32,453 - #9 =
INFO  18:22:32,453 - #32 arg
INFO  18:22:32,453 - #8 ;
INFO  18:22:32,453 - #4 }
INFO  18:22:32,453 - #17 void
INFO  18:22:32,453 - #32 main
INFO  18:22:32,453 - #15 (
INFO  18:22:32,453 - #16 )
INFO  18:22:32,453 - #32 int
INFO  18:22:32,453 - #32 x
INFO  18:22:32,453 - #12 ,
INFO  18:22:32,453 - #32 i
INFO  18:22:32,453 - #8 ;
INFO  18:22:32,453 - #32 char
INFO  18:22:32,453 - #32 c
INFO  18:22:32,453 - #12 ,
INFO  18:22:32,454 - #32 int
INFO  18:22:32,454 - #10 [
INFO  18:22:32,454 - #11 ]
INFO  18:22:32,454 - #32 arr
INFO  18:22:32,454 - #8 ;
INFO  18:22:32,454 - #3 {
INFO  18:22:32,454 - #32 val
INFO  18:22:32,454 - #9 =
INFO  18:22:32,454 - #30 new
INFO  18:22:32,454 - #32 Table
INFO  18:22:32,454 - #15 (
INFO  18:22:32,454 - #16 )
INFO  18:22:32,454 - #8 ;
INFO  18:22:32,454 - #32 val
INFO  18:22:32,454 - #18 .
INFO  18:22:32,454 - #32 setfactor
INFO  18:22:32,454 - #15 (
INFO  18:22:32,454 - #34 2
INFO  18:22:32,454 - #16 )
INFO  18:22:32,454 - #8 ;
INFO  18:22:32,454 - #32 arr
INFO  18:22:32,454 - #9 =
INFO  18:22:32,454 - #30 new
INFO  18:22:32,455 - #32 int
INFO  18:22:32,455 - #10 [
INFO  18:22:32,455 - #34 3
INFO  18:22:32,455 - #11 ]
INFO  18:22:32,455 - #8 ;
INFO  18:22:32,455 - #27 for
INFO  18:22:32,455 - #15 (
INFO  18:22:32,455 - #32 i
INFO  18:22:32,455 - #9 =
INFO  18:22:32,455 - #34 0
INFO  18:22:32,455 - #8 ;
INFO  18:22:32,455 - #32 i
INFO  18:22:32,455 - #39 <
INFO  18:22:32,455 - #34 3
INFO  18:22:32,455 - #8 ;
INFO  18:22:32,455 - #32 i
INFO  18:22:32,455 - #28 ++
INFO  18:22:32,455 - #16 )
INFO  18:22:32,455 - #3 {
INFO  18:22:32,455 - #32 arr
INFO  18:22:32,455 - #10 [
INFO  18:22:32,455 - #32 i
INFO  18:22:32,455 - #11 ]
INFO  18:22:32,455 - #9 =
INFO  18:22:32,456 - #32 i
INFO  18:22:32,456 - #8 ;
INFO  18:22:32,456 - #4 }
INFO  18:22:32,456 - #27 for
INFO  18:22:32,456 - #15 (
INFO  18:22:32,456 - #32 i
INFO  18:22:32,456 - #9 =
INFO  18:22:32,456 - #34 0
INFO  18:22:32,456 - #8 ;
INFO  18:22:32,456 - #32 i
INFO  18:22:32,456 - #39 <
INFO  18:22:32,456 - #34 3
INFO  18:22:32,456 - #8 ;
INFO  18:22:32,456 - #32 i
INFO  18:22:32,456 - #28 ++
INFO  18:22:32,456 - #16 )
INFO  18:22:32,456 - #26 print
INFO  18:22:32,456 - #15 (
INFO  18:22:32,456 - #32 arr
INFO  18:22:32,456 - #10 [
INFO  18:22:32,456 - #32 i
INFO  18:22:32,456 - #11 ]
INFO  18:22:32,456 - #16 )
INFO  18:22:32,456 - #8 ;
INFO  18:22:32,456 - #32 val
INFO  18:22:32,457 - #18 .
INFO  18:22:32,457 - #32 pos
INFO  18:22:32,457 - #9 =
INFO  18:22:32,457 - #30 new
INFO  18:22:32,457 - #32 int
INFO  18:22:32,457 - #10 [
INFO  18:22:32,457 - #32 sizes
INFO  18:22:32,457 - #19 ::
INFO  18:22:32,457 - #32 tableSize
INFO  18:22:32,457 - #11 ]
INFO  18:22:32,457 - #8 ;
INFO  18:22:32,457 - #32 val
INFO  18:22:32,457 - #18 .
INFO  18:22:32,457 - #32 neg
INFO  18:22:32,457 - #9 =
INFO  18:22:32,457 - #30 new
INFO  18:22:32,457 - #32 int
INFO  18:22:32,457 - #10 [
INFO  18:22:32,457 - #32 sizes
INFO  18:22:32,457 - #19 ::
INFO  18:22:32,457 - #32 tableSize
INFO  18:22:32,457 - #11 ]
INFO  18:22:32,457 - #8 ;
INFO  18:22:32,457 - #25 read
INFO  18:22:32,457 - #15 (
INFO  18:22:32,457 - #32 x
INFO  18:22:32,457 - #16 )
INFO  18:22:32,458 - #8 ;
INFO  18:22:32,458 - #27 for
INFO  18:22:32,458 - #15 (
INFO  18:22:32,458 - #8 ;
INFO  18:22:32,458 - #32 i
INFO  18:22:32,458 - #39 <
INFO  18:22:32,458 - #32 sizes
INFO  18:22:32,458 - #19 ::
INFO  18:22:32,458 - #32 tableSize
INFO  18:22:32,458 - #8 ;
INFO  18:22:32,458 - #32 i
INFO  18:22:32,458 - #28 ++
INFO  18:22:32,458 - #16 )
INFO  18:22:32,458 - #3 {
INFO  18:22:32,458 - #32 val
INFO  18:22:32,458 - #18 .
INFO  18:22:32,458 - #32 putp
INFO  18:22:32,458 - #15 (
INFO  18:22:32,458 - #34 0
INFO  18:22:32,458 - #12 ,
INFO  18:22:32,458 - #32 i
INFO  18:22:32,458 - #16 )
INFO  18:22:32,458 - #8 ;
INFO  18:22:32,458 - #32 val
INFO  18:22:32,458 - #18 .
INFO  18:22:32,458 - #32 putn
INFO  18:22:32,458 - #15 (
INFO  18:22:32,459 - #34 0
INFO  18:22:32,459 - #12 ,
INFO  18:22:32,459 - #32 i
INFO  18:22:32,459 - #16 )
INFO  18:22:32,459 - #8 ;
INFO  18:22:32,459 - #4 }
INFO  18:22:32,459 - #32 f
INFO  18:22:32,459 - #15 (
INFO  18:22:32,459 - #32 c
INFO  18:22:32,459 - #12 ,
INFO  18:22:32,459 - #32 x
INFO  18:22:32,459 - #12 ,
INFO  18:22:32,459 - #32 i
INFO  18:22:32,459 - #16 )
INFO  18:22:32,459 - #8 ;
INFO  18:22:32,460 - #25 read
INFO  18:22:32,460 - #15 (
INFO  18:22:32,460 - #32 rows
INFO  18:22:32,460 - #16 )
INFO  18:22:32,460 - #8 ;
INFO  18:22:32,460 - #32 x
INFO  18:22:32,460 - #9 =
INFO  18:22:32,460 - #32 rows
INFO  18:22:32,460 - #8 ;
INFO  18:22:32,460 - #27 for
INFO  18:22:32,460 - #15 (
INFO  18:22:32,460 - #8 ;
INFO  18:22:32,460 - #8 ;
INFO  18:22:32,460 - #16 )
INFO  18:22:32,460 - #3 {
INFO  18:22:32,460 - #20 if
INFO  18:22:32,460 - #15 (
INFO  18:22:32,460 - #32 x
INFO  18:22:32,460 - #40 <=
INFO  18:22:32,460 - #34 0
INFO  18:22:32,460 - #16 )
INFO  18:22:32,460 - #22 break
INFO  18:22:32,461 - #8 ;
INFO  18:22:32,461 - #20 if
INFO  18:22:32,461 - #15 (
INFO  18:22:32,461 - #34 0
INFO  18:22:32,461 - #40 <=
INFO  18:22:32,461 - #32 x
INFO  18:22:32,461 - #14 &&
INFO  18:22:32,461 - #32 x
INFO  18:22:32,461 - #39 <
INFO  18:22:32,461 - #32 sizes
INFO  18:22:32,461 - #19 ::
INFO  18:22:32,461 - #32 tableSize
INFO  18:22:32,461 - #16 )
INFO  18:22:32,461 - #3 {
INFO  18:22:32,461 - #32 val
INFO  18:22:32,461 - #18 .
INFO  18:22:32,461 - #32 putp
INFO  18:22:32,461 - #15 (
INFO  18:22:32,461 - #32 val
INFO  18:22:32,461 - #18 .
INFO  18:22:32,461 - #32 getp
INFO  18:22:32,461 - #15 (
INFO  18:22:32,461 - #32 x
INFO  18:22:32,461 - #16 )
INFO  18:22:32,461 - #41 +
INFO  18:22:32,461 - #34 1
INFO  18:22:32,461 - #16 )
INFO  18:22:32,461 - #8 ;
INFO  18:22:32,461 - #4 }
INFO  18:22:32,461 - #21 else
INFO  18:22:32,461 - #20 if
INFO  18:22:32,461 - #15 (
INFO  18:22:32,462 - #32 sizes
INFO  18:22:32,462 - #19 ::
INFO  18:22:32,462 - #32 tableSize
INFO  18:22:32,462 - #39 <
INFO  18:22:32,462 - #32 x
INFO  18:22:32,462 - #14 &&
INFO  18:22:32,462 - #32 x
INFO  18:22:32,462 - #39 <
INFO  18:22:32,462 - #34 0
INFO  18:22:32,462 - #16 )
INFO  18:22:32,462 - #3 {
INFO  18:22:32,462 - #32 val
INFO  18:22:32,462 - #18 .
INFO  18:22:32,462 - #32 putn
INFO  18:22:32,463 - #15 (
INFO  18:22:32,463 - #32 val
INFO  18:22:32,463 - #18 .
INFO  18:22:32,463 - #32 getn
INFO  18:22:32,463 - #15 (
INFO  18:22:32,463 - #32 x
INFO  18:22:32,463 - #16 )
INFO  18:22:32,463 - #41 +
INFO  18:22:32,463 - #34 1
INFO  18:22:32,463 - #16 )
INFO  18:22:32,463 - #8 ;
INFO  18:22:32,463 - #4 }
INFO  18:22:32,463 - #25 read
INFO  18:22:32,463 - #15 (
INFO  18:22:32,463 - #32 x
INFO  18:22:32,464 - #16 )
INFO  18:22:32,464 - #8 ;
INFO  18:22:32,464 - #4 }
INFO  18:22:32,464 - #4 }
INFO  18:22:32,464 - #4 }
