
package rs.ac.bg.etf.pp1;

import java_cup.runtime.*;
import org.apache.log4j.*;
import rs.ac.bg.etf.pp1.ast.*;

nonterminal Program, NamespaceList, DeclList, MethodDeclList, NamespaceDecl;

terminal PROG, LBRACE, RBRACE;
terminal String IDENT;
terminal String NAMESPACE;

Program ::= (Program) PROG IDENT NamespacList DeclList LBRACE MethodDeclList RBRACE

NamespaceList ::= (NamespaceDecl) NamespaceList NamespaceDecl
			|
			(NoNamespaceDecl) /* epsilon */
			;
		
NamespaceDecl ::= (NamespaceDecl) NAMESPACE IDENT LBRACE DeclList LBRACE MethodDecList RBRACE RBRACE

DeclList ::= (DeclList) DeclList DeclListElem
			|
			(NoDeclList)
			;

DeclListElem ::= (ConstDecl) ConstDecl
			| (VarDecl) VarDecl
			| (ClassDecl) ClassDecl
			;

ConstDecl ::= CONST Type IDENT EQUAL ConstType IdentRep SEMI

ConstType ::= (NumConsType) NumConsType
			| (CharConstType) CharConstType
			| (BoolConstType) BoolConstType

IdentRep ::= (IdentRep) IdentRep IdentRepElem

IdentRepElem ::= (IdentRepElem) COMMA IDENT EQUAL ConstType
			|
			(NoIdentRepElem) /* epsilon */
			;
			
VarDecl ::= (VarDecl) Type IDENT LSBRACE SquareBracesList RSBRACE IdentSquareBracesList SEMI

SquareBracesList ::= (SquareBracesList) LSBRACE SquareBracesList RSBRACE
				|
				(NoSquareBracesList)
				;

IdentSquareBracesList ::= (IdentSquareBracesList) IdentSquareBracesList IdentSquareBracesElem


IdentSquareBracesElem ::= (IdentSquareBracesElem) COMMA IDENT LSBRACE SquareBracesList RSBRACE SEMI

StaticInitializer ::= (StaticInitializer) STATIC LBRACE StatementList RBRACE

MethodDecl ::= (MethodDeclType) Type IDENT LRBRACE FormParsList RRBRACE VarDeclList LBRACE StatementList RBRACE
			| (MethodDeclVodi) VOID IDENT LRBRACE FormParsList RRBRACE VarDeclList LBRACE StatementList RBRACE
			
FormParsList ::= (FormParsList) FormParsList FormPars
				| (NoFormParsList)
				;

FormPars ::= (FormPars) Type IDENT SquareBracesList TypeIdentList

TypeIdentList ::= (TypeIdentList) COMMA Type IDENT SquareBracesList

Type ::= (Type) IDENT TWODV IdentTwoList IDENT

IdentTwoList ::= (IdentTwoList) IDENT TWODV

StatementList ::= (StatementList) StatementList Statement
				| (NoStatementlist)
				;

Statement ::= (DesignatorStmt) DesignatorStatement SEMI
			| (IfStmt) IF LRBRACE Condition RRBRACE Statement ElseStatementList
			| (BreakStmt) BREAK SEMI
			| (ContinueStmt) CONTINUE SEMI
			| (ReturnStmt) RETURN ExprList SEMI
			| (ReadStmt) READ LRBRACE Designator RRBRACE SEMI
			| (PrintStmt) PRINT LRBRACE Expr COMMA NumConst NumConstList RRBRACE SEMI
			| (ForStmt)LRBRACE DesignatorStmtList SEMI ConstFact CondFactList SEMI DesignatorStmtList RRBRACE Statement
			| (Stmt) LBRACE StatmentList RBRACE
			;

DesignatorStatement ::= (DesignatorStatementAssing) Designator Assignop Expr
					| (DesignatorStatementAct) LRBRACE ActPars ActParsList RRBRACE
					| (DesignatorStatementPlusPlus) TWOPLUS
					| (DesignatorStatementMinusMinus) TWOMINUS
					| (DesignatorStatementExpr) LBRACE DesinatorComma MULTIPLY Designator RBRACE EQUAL Designator
					;

NumConstList ::= (NumConstList) NumConstList NumConstElem
				| (NoNumConstList)
				;
				
NumConstElem ::= (NumConstElem) COMMA NumConst








